{
  "name": "Teleturk",
  "tagline": "Telegram (http://telegram.org) client library implemented in C# - Base driven from TLSharpCore",
  "body": "# TeleTurk\r\n* This project is driven from [TLSharp](https://github.com/sochix/TLSharp) and thanks to Sochix.\r\n* Thanks to @XyLoNaMiyX for his amazing [CodeGenerator](https://github.com/LonamiWebs/TLSharp.CodeGenerator).\r\n\r\n# Status\r\nDo not try to use this project!!! It is still under development and needs a lot of things to implement!\r\n\r\n# How To Use\r\n1. Create a [developer account](https://my.telegram.org/) in Telegram.\r\n2. Fill the [Configuration.cs] (https://github.com/ShanalTeam/TeleTurk/blob/master/TeleTurk.Core/Configuration.cs) with apiHash and apiID you got from developer account, you also need to put your registered phonenumber there. \r\n\r\n## Authentication\r\n\r\n```csharp\r\nvar store = new FileSessionStore();                     // store session file\r\nvar client = new TelegramClient(store, \"session\");      // create client\r\nawait client.Connect();                                 // try to connect\r\nvar hash = await client.SendCodeRequest();              // send Code request for registerd phone number\r\nvar code = \"87493\";                                     // you can change code in debugger\r\nvar user = await client.MakeAuth(hash, code);           // send code and hash to get confirm from telegram\r\n```\r\n\r\n## Using the library\r\n### Sending and receiving requests\r\nThis is still a work in progress. To implement a new request, open up `TelegramClient.cs` and write down your request following this scheme:\r\n```csharp\r\npublic async Task<...> MakeRequest(...)\r\n{\r\n    var request = new TL.SomeRequest(...);\r\n    return await _sender.SendReceive<...>(request);\r\n}\r\n```\r\n\r\nFor example, if we wanted to write a request to delete a contact we would do:\r\n```csharp\r\n// Returns true if the contacts were deleted\r\npublic async Task<bool> DeleteContacts(List<InputUser> inputUsers)\r\n{\r\n    var request = new TL.ContactsDeleteContactsRequest(inputUsers);\r\n    return await _sender.SendReceive<bool>(request);\r\n}\r\n```\r\n\r\n### Retrieving Telegram object properties\r\nYou have different ways to use the Telegram types. One is casting the `abstract` type to its real type. For example:\r\n```csharp\r\n// We have an abstract Message object\r\nMessage message = ...;\r\n\r\n// We want to retrieve its Id\r\nint id;\r\n\r\n// We need to check against what type is before casting\r\nif (message is TL.MessageEmptyType)\r\n    id = ((TL.MessageType)message).Id;\r\n\r\nelse if (message is TL.MessageType)\r\n    id = ((TL.MessageServiceType)message).Id;\r\n\r\nelse if (message is TL.MessageServiceType)\r\n    id = ((TL.MessageServiceType)message).Id;\r\n```\r\n\r\nThis however can quickly become annoying. You can also do:\r\n```csharp\r\n// Accessing the Id by using the indexer\r\nMessage message = ...;\r\nint id = (int)message[\"Id\"];\r\n```\r\n\r\nFairly easier!\r\n\r\n# Donations\r\nThanks for donations! It's highly appreciated. \r\nBitcoin wallet: **3K1ocweFgaHnAibJ3n6hX7RNZWFTFcJjUe**\r\n\r\nList of donators:\r\n* [mtbitcoin](https://github.com/mtbitcoin)\r\n\r\n# License\r\n\r\n**Please, provide link to an author when you using library**\r\n\r\nThe MIT License\r\n\r\n* Copyright (c) 2015 Ilya Pirozhenko http://www.sochix.ru\r\n* Copyright (c) 2016 Lonami http://lonamiwebs.github.io\r\n* Copyright (c) 2016 Ehsan Hesam http://Shanal.ir\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}